{
  "stats": {
    "suites": 4,
    "tests": 19,
    "passes": 18,
    "pending": 0,
    "failures": 1,
    "start": "2019-08-29T17:54:52.756Z",
    "end": "2019-08-29T17:54:55.541Z",
    "duration": 2785,
    "testsRegistered": 19,
    "passPercent": 94.73684210526315,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d42e82d8-6834-4456-af00-e67f0061737b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "69a5cf9a-1fc8-4722-a718-9fe016ae5d44",
          "title": "Login API Tests : ",
          "fullFile": "D:\\projectSculp_Working_\\Arzoo\\Server\\test\\apiTests.js",
          "file": "\\test\\apiTests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should be able login with correct credentials ",
              "fullTitle": "Login API Tests :  Should be able login with correct credentials ",
              "timedOut": false,
              "duration": 2178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        //console.log(res.body)\n        expect(res).to.have.status(200);\n        expect(res.body).is.a('Object');\n        done();\n    })",
              "err": {},
              "uuid": "3a74535c-bbed-4ca8-8b7d-8fbd473f645c",
              "parentUUID": "69a5cf9a-1fc8-4722-a718-9fe016ae5d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return generated token after sucessful login",
              "fullTitle": "Login API Tests :  Should return generated token after sucessful login",
              "timedOut": false,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        //console.log(res.body)\n        expect(res).to.have.status(200);\n        expect(res.body).is.a('Object');\n        (res.body).should.include.keys('token');\n        expect(res.body['token']).length.greaterThan(0);\n        done();\n    })",
              "err": {},
              "uuid": "8c12ce7d-b2fc-4cf8-9574-4b77bba756e4",
              "parentUUID": "69a5cf9a-1fc8-4722-a718-9fe016ae5d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not login with incorrect Credentials ",
              "fullTitle": "Login API Tests :  Should not login with incorrect Credentials ",
              "timedOut": false,
              "duration": 25,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '432423',\n    password: '1234324324578'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        //console.log(res.body);\n        expect(res).to.have.status(404);\n        done();\n    })",
              "err": {},
              "uuid": "9d1e6e01-fb9a-4b58-8f9e-15319ce101ba",
              "parentUUID": "69a5cf9a-1fc8-4722-a718-9fe016ae5d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should send error message if wrong password ",
              "fullTitle": "Login API Tests :  Should send error message if wrong password ",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '1234578'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        expect(res).to.have.status(404);\n        (res.body).should.be.a('Object');\n        (res.body).should.include.keys('message');\n        expect(res.body['message']).length.greaterThan(0);\n        (res.body['message']).should.contain('Wrong password');\n        done();\n    })",
              "err": {},
              "uuid": "005620e3-1ef6-48c8-a953-4e944a26383a",
              "parentUUID": "69a5cf9a-1fc8-4722-a718-9fe016ae5d44",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to login with unregistered mobile no",
              "fullTitle": "Login API Tests :  Should not be able to login with unregistered mobile no",
              "timedOut": false,
              "duration": 20,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657232663844',\n    password: '2323'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        expect(res).to.have.status(404);\n        (res.body).should.be.a('Object');\n        (res.body).should.include.keys('message');\n        expect(res.body['message']).length.greaterThan(0);\n        (res.body['message']).should.contain('Mobile is not registered');\n        done();\n    })",
              "err": {},
              "uuid": "0a8b1816-38b9-46fb-b04e-2a899b1ad7a9",
              "parentUUID": "69a5cf9a-1fc8-4722-a718-9fe016ae5d44",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a74535c-bbed-4ca8-8b7d-8fbd473f645c",
            "8c12ce7d-b2fc-4cf8-9574-4b77bba756e4",
            "9d1e6e01-fb9a-4b58-8f9e-15319ce101ba",
            "005620e3-1ef6-48c8-a953-4e944a26383a",
            "0a8b1816-38b9-46fb-b04e-2a899b1ad7a9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "2b3c8bc1-5df8-4954-849d-9fd0deb22be1",
          "title": "User Profile : ",
          "fullFile": "D:\\projectSculp_Working_\\Arzoo\\Server\\test\\apiTests.js",
          "file": "\\test\\apiTests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return all details for user",
              "fullTitle": "User Profile :  Should return all details for user",
              "timedOut": false,
              "duration": 63,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        let token = res.body.token\n        chai.request(server)\n            .get('/api/userProfile')\n            .set('Authorization', 'Bearer ' + token)\n            .end((err, res) => {\n                //console.log(res.body);\n                (res.body).should.have.status(true);\n                (res.body.user).should.have.property('FirstName');\n                (res.body.user).should.have.property('LastName');\n                (res.body.user).should.have.property('MobileNo');\n                (res.body.user).should.have.property('Email');\n                (res.body.user).should.have.property('CountryCode');\n                (res.body.user).should.have.property('Password');\n                (res.body.user).should.have.property('ConfirmPassword');\n                done();\n            })\n    })",
              "err": {},
              "uuid": "5302734d-7545-44a3-ad7e-a5391938fab4",
              "parentUUID": "2b3c8bc1-5df8-4954-849d-9fd0deb22be1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return details of correct User",
              "fullTitle": "User Profile :  Should return details of correct User",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        let token = res.body.token\n        chai.request(server)\n            .get('/api/userProfile')\n            .set('Authorization', 'Bearer ' + token)\n            .end((err, res) => {\n                expect(res.body.user.MobileNo).equal(user.MobileNo);\n                expect(res.body.user.Password).equal(user.password);\n                done();\n            })\n    })",
              "err": {},
              "uuid": "59f043bc-2705-4114-b01d-5d9657790103",
              "parentUUID": "2b3c8bc1-5df8-4954-849d-9fd0deb22be1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5302734d-7545-44a3-ad7e-a5391938fab4",
            "59f043bc-2705-4114-b01d-5d9657790103"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 86,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
          "title": "Registeration test",
          "fullFile": "D:\\projectSculp_Working_\\Arzoo\\Server\\test\\apiTests.js",
          "file": "\\test\\apiTests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Register successfully ",
              "fullTitle": "Registeration test Register successfully ",
              "timedOut": false,
              "duration": 36,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n            FirstName: \"nidhi\",\n            LastName: 'Kanojia',\n            CountryCode: 91,\n            MobileNo: 7028332229,\n            Email: 'nidhikanojia456@gmail.com',\n            Password: 'nidhi1',\n            ConfirmPassword: 'nidhi1',\n            UserType: 'u'\n        }\n        chai.request(server)\n            .post('/api/register')\n            .send(user)\n            .end((err, res) => {\n                (res).should.have.status(200);\n                (res).should.be.a('Object');\n                (res.body).should.have.property('FirstName');\n                (res.body).should.have.property('LastName');\n                (res.body).should.have.property('CountryCode');\n                (res.body).should.have.property('MobileNo');\n                (res.body).should.have.property('Email');\n                (res.body).should.have.property('Password');\n                (res.body).should.have.property('ConfirmPassword');\n                (res.body).should.have.property('UserType');\n                done();\n            })",
              "err": {},
              "uuid": "5ce4433b-66ba-4f37-815a-e884beadbaf2",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "First name should be a string less than 150 ",
              "fullTitle": "Registeration test First name should be a string less than 150 ",
              "timedOut": false,
              "duration": 16,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    FirstName: \"nidhi\"\n}\nchai.request(server)\n    .post('/api/register')\n    .send(user)\n    .end((err, res) => {\n        (res).should.be.a('Object');\n        expect(user.FirstName).to.be.a('String').length.lessThan(150);\n        done();\n    })",
              "err": {},
              "uuid": "1098bb29-cde7-4d2f-97c7-7e9a2102ef87",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Last name should be a string less than 150 ",
              "fullTitle": "Registeration test Last name should be a string less than 150 ",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    LastName: \"nidhi\"\n}\nchai.request(server)\n    .post('/api/register')\n    .send(user)\n    .end((err, res) => {\n        (res).should.be.a('Object');\n        expect(user.LastName).to.be.a('String').length.lessThan(150);\n        done();\n    })",
              "err": {},
              "uuid": "295a9191-0552-45e4-a57d-ed3ba7ac04a5",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Countrycode should be a number less than 6 ",
              "fullTitle": "Registeration test Countrycode should be a number less than 6 ",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    CountryCode: 91\n}\nchai.request(server)\n    .post('/api/register')\n    .send(user)\n    .end((err, res) => {\n        (res).should.be.a('Object');\n        expect(user.CountryCode).to.be.a('Number')\n        done();\n    })",
              "err": {},
              "uuid": "740b09eb-b1f1-4e44-acc4-0c93563f2802",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Mobile no should be a Number less than 16 ",
              "fullTitle": "Registeration test Mobile no should be a Number less than 16 ",
              "timedOut": false,
              "duration": 14,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: 123456789\n}\nchai.request(server)\n    .post('/api/register')\n    .send(user)\n    .end((err, res) => {\n        (res).should.be.a('Object');\n        expect(user.MobileNo).to.be.a('Number');\n        done();\n    })",
              "err": {},
              "uuid": "735524b3-651b-4984-a8a7-e1aa043d81c4",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Email should be a string  ",
              "fullTitle": "Registeration test Email should be a string  ",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    Email: \"nidhikanojia456@gmail.com\"\n}\nchai.request(server)\n    .post('/api/register')\n    .send(user)\n    .end((err, res) => {\n        (res).should.be.a('Object');\n        expect(user.Email).to.be.a('String');\n        done();\n    })",
              "err": {},
              "uuid": "9b0fca22-1ab7-45d6-97db-7e06f3734fd0",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Password  and confirmpassword should be a string less than 16 ",
              "fullTitle": "Registeration test Password  and confirmpassword should be a string less than 16 ",
              "timedOut": false,
              "duration": 11,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    Password: \"nidhi1\",\n    ConfirmPassword: \"nidhi1\"\n}\nchai.request(server)\n    .post('/api/register')\n    .send(user)\n    .end((err, res) => {\n        (res).should.be.a('Object');\n        expect(user.Password).to.be.a('String').length.lessThan(16);\n        expect(user.ConfirmPassword).to.be.a('String').length.lessThan(16);\n        expect(user.Password).equal(user.ConfirmPassword);\n        done();\n    })",
              "err": {},
              "uuid": "c02904d3-d40f-4465-b72e-c61b70c99d2b",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not be able to register",
              "fullTitle": "Registeration test Should not be able to register",
              "timedOut": false,
              "duration": 12,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    FirstName: '',\n    LastName: 'Kanojia',\n    CountryCode: 91,\n    MobileNo: 7028332229,\n    Email: 'nidhikanojia456@gmail.com',\n    Password: 'nidhi1',\n    ConfirmPassword: 'nidhi1',\n    UserType: 'u'\n}\nchai.request(server)\n    .post('/api/register')\n    .send(user)\n    .end((err, res) => {\n        (res).should.have.status(422);\n        done();\n    })",
              "err": {},
              "uuid": "c69a592b-c104-4acf-bbce-c467c5843004",
              "parentUUID": "9b7be8f7-ed75-42bc-94e2-a7630d4e3977",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5ce4433b-66ba-4f37-815a-e884beadbaf2",
            "1098bb29-cde7-4d2f-97c7-7e9a2102ef87",
            "295a9191-0552-45e4-a57d-ed3ba7ac04a5",
            "740b09eb-b1f1-4e44-acc4-0c93563f2802",
            "735524b3-651b-4984-a8a7-e1aa043d81c4",
            "9b0fca22-1ab7-45d6-97db-7e06f3734fd0",
            "c02904d3-d40f-4465-b72e-c61b70c99d2b",
            "c69a592b-c104-4acf-bbce-c467c5843004"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 124,
          "root": false,
          "rootEmpty": false,
          "_timeout": 4000
        },
        {
          "uuid": "4860c50c-235a-4413-ab9b-6f038cd8b5e5",
          "title": "User Plan",
          "fullFile": "D:\\projectSculp_Working_\\Arzoo\\Server\\test\\apiTests.js",
          "file": "\\test\\apiTests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User should be able to get his enrolled plan details",
              "fullTitle": "User Plan User should be able to get his enrolled plan details",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        let token = res.body.token\n        chai.request(server)\n            .get('/api/myPlan')\n            .set('Authorization', 'Bearer ' + token)\n            .end((err, res) => {\n                \n                //console.log(res.body);\n                (res).should.have.status(200);\n                (res.body[0]).should.have.property('StartDate');\n                (res.body[0]).should.have.property('EndDate');\n                (res.body[0]).should.have.property('PlanDetail');\n                (res.body[0].PlanDetail).should.have.property('GoalType');\n                (res.body[0].PlanDetail).should.have.property('Duration');\n                (res.body[0].PlanDetail).should.have.property('Price');\n    \n                done();\n            })\n    })",
              "err": {},
              "uuid": "be615c15-a7ec-4184-908d-b9bd6b7e9ed9",
              "parentUUID": "4860c50c-235a-4413-ab9b-6f038cd8b5e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to get his coach details for enrolled plan ",
              "fullTitle": "User Plan User should be able to get his coach details for enrolled plan ",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        let token = res.body.token\n        chai.request(server)\n            .get('/api/myPlan')\n            .set('Authorization', 'Bearer ' + token)\n            .end((err, res) => {\n                //console.log(res.body);\n                (res).should.have.status(200);\n                (res.body[0]).should.have.property('CoachDetails');\n                (res.body[0].CoachDetails).should.have.property('FirstName');\n                (res.body[0].CoachDetails).should.have.property('LastName');\n                (res.body[0].CoachDetails).should.have.property('Bio');\n                done();\n            })\n    })",
              "err": {},
              "uuid": "00a08772-4468-418b-9a88-52005d2bf76e",
              "parentUUID": "4860c50c-235a-4413-ab9b-6f038cd8b5e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should be able to see his start and end date for enrolled Plan ",
              "fullTitle": "User Plan User should be able to see his start and end date for enrolled Plan ",
              "timedOut": false,
              "duration": 22,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        let token = res.body.token\n        chai.request(server)\n            .get('/api/myPlan')\n            .set('Authorization', 'Bearer ' + token)\n            .end((err, res) => {\n                //console.log(res.body);\n                (res).should.have.status(200);\n                (res.body[0]).should.have.property('PlanDetail');\n                (res.body[0]).should.have.property('StartDate');\n                (res.body[0]).should.have.property('EndDate');\n                (res.body[0].PlanDetail).should.have.property('Duration');\n                done();\n            })\n    })",
              "err": {},
              "uuid": "1e6f767d-090f-4606-a0ea-7e3418fa33e9",
              "parentUUID": "4860c50c-235a-4413-ab9b-6f038cd8b5e5",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User should see message if he is not enrolled to any plan ",
              "fullTitle": "User Plan User should see message if he is not enrolled to any plan ",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let user = {\n    MobileNo: '9657663844',\n    password: '12345'\n}\nchai.request(server)\n    .post('/api/authenticate')\n    .send(user)\n    .end((req, res) => {\n        let token = res.body.token\n        chai.request(server)\n            .get('/api/myPlan')\n            .set('Authorization', 'Bearer ' + token)\n            .end((err, res) => {\n                //console.log(res.body);\n                (res).should.have.status(404);\n                (res.body).should.have.property('error');\n                (res.body.error).should.equal('Not Enrolled');\n                done();\n            })\n    })",
              "err": {
                "message": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 404 but got 200",
                "estack": "AssertionError: expected { Object (_events, _eventsCount, ...) } to have status code 404 but got 200\n    at chai.request.get.set.end (test\\apiTests.js:401:43)\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:716:12)\n    at parser (node_modules\\superagent\\lib\\node\\index.js:916:18)\n    at IncomingMessage.res.on (node_modules\\superagent\\lib\\node\\parsers\\json.js:19:7)\n    at endReadableNT (_stream_readable.js:1129:12)\n    at process._tickCallback (internal/process/next_tick.js:63:19)",
                "diff": "- 200\n+ 404\n"
              },
              "uuid": "6b6d2621-4f5e-4365-b890-8c8ffcf1cb04",
              "parentUUID": "4860c50c-235a-4413-ab9b-6f038cd8b5e5",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "be615c15-a7ec-4184-908d-b9bd6b7e9ed9",
            "00a08772-4468-418b-9a88-52005d2bf76e",
            "1e6f767d-090f-4606-a0ea-7e3418fa33e9"
          ],
          "failures": [
            "6b6d2621-4f5e-4365-b890-8c8ffcf1cb04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 75,
          "root": false,
          "rootEmpty": false,
          "_timeout": 4000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "6.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": null,
      "version": "4.0.1"
    }
  }
}